//
//  main.cpp
//  task_1_4
//
//  Created by Mac-HOME on 10.03.2020.
//  Copyright © 2020 Mac-HOME. All rights reserved.
//

/*
 Решение всех задач данного раздела предполагает использование кучи,
 реализованной в виде класса. Решение должно поддерживать передачу
 функции сравнения снаружи.
 
 На вокзале есть некоторое количество тупиков, куда прибывают электрички.
 Этот вокзал является их конечной станцией. Дано расписание движения
 электричек, в котором для каждой электрички указано время ее прибытия,
 а также время отправления в следующий рейс. Электрички в расписании
 упорядочены по времени прибытия. Когда электричка прибывает, ее ставят
 в свободный тупик с минимальным номером. При этом если электричка из
 какого-то тупика отправилась в момент времени X, то электричку, которая
 прибывает в момент времени X, в этот тупик ставить нельзя, а электричку,
 прибывающую в момент X+1 — можно.
 
 В данный момент на вокзале достаточное количество тупиков для работы
 по расписанию.
 
 Напишите программу, которая по данному расписанию определяет,
 какое минимальное количество тупиков требуется для работы вокзала.
 */

#include <iostream>
#include <cassert>

#include "heap.cpp"

int main(int argc, const char * argv[]) {
    int n = 0;
    std::cin >> n;
    
    BinominalHeap<int, IsLessFunctor<int>> heap;
    int max_heap_size = 0;
    
    for (int i = 0, arv_time = 0, dpr_time = 0; i < n; ++i) {
        std::cin >> arv_time >> dpr_time;
        
        while (!heap.isEmpty() && heap.top() < arv_time) {
            heap.pop();
        }
        
        heap.push(dpr_time);
        if (heap.size() > max_heap_size) {
            max_heap_size = heap.size();
        }
    }
    
    std::cout << max_heap_size;
    
    return 0;
}
